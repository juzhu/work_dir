var express = require('express');
var config = require('./config.js')
var router = express.Router();
var wxUtli = require('./tool/wx_utli.js');
var dbUser = require('./db_user_info.js').userDB;
var uuid = require('node-uuid');
var sms = require("./send_sms.js");
var verifyCodeMap = {};
var userSession = {};  // session key索引信息 基本信息
var loginUrl ="https://open.weixin.qq.com/connect/oauth2/authorize?appid="+ config.appID+ "&redirect_uri=http%3A%2F%2Fappmishu.cn%2Fwx_redirect&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect"

function generateSmsCodeInfo (phone) {
  // 检查用户上一次申请时间
  var lastCodeInfo = verifyCodeMap[phone];
  var validReq = false;
  var nowTime = (new Date()).getTime() / 1000; // 秒
  if (lastCodeInfo === undefined ) {
    validReq = true;
  } else if (lastCodeInfo.nextCodeTime >= nowTime) {
    validReq = true;
  } else {
    validReq = false;
  }
  // 下一次申请时间
  // 码有效时间
  // code
  var codeInfo = {};
  if (!validReq) {
    codeInfo.err = true;
    codeInfo.errMsg = "请求太频繁，稍等重试"
    return codeInfo;
  }
  codeInfo.err = false;
  var code = Math.floor(Math.random() * 1000000);
  if (code < 100000) {
    code += 100000;
  }
  var nowTime = (new Date()).getTime() / 1000; // 秒
  codeInfo.nextCodeTime = nowTime + 60 * 1;
  codeInfo.curCodeValidTime = nowTime + 60 * 5;
  codeInfo.code = code;
  codeInfo.codeMsg = "你的本次操作验证码是: " + code + " 两分钟内有效 ，请尽快使用【聚箸】"
  return codeInfo;
}

function verifySmsCode(phone, code) {
  // 检查用户上一次申请时间
  console.log(JSON.stringify(verifyCodeMap));
  var lastCodeInfo = verifyCodeMap[phone];
  console.log("verifySmsCode for phone: " + phone + " code: " + code + " lastinfo: " + JSON.stringify(lastCodeInfo));
  var validReq = false;
  var nowTime = (new Date()).getTime() / 1000; // 秒
  if (lastCodeInfo === undefined ) {
    return false;
  } else if ((lastCodeInfo.code ==code) && (lastCodeInfo.curCodeValidTime>= nowTime)) {
    verifyCodeMap[phone] = undefined;
    return  true;
  } else {
    return false;
  }
}

function validateSession(req, res) {
  var sessionKey = req.session.sessionKey;
  console.log("session_key:" + sessionKey);
  if (!sessionKey || userSession[sessionKey] == undefined) {
    res.redirect(loginUrl);
    return false;
  } else {
    return userSession[sessionKey];
  }
}
/* GET home page. */
router.get('/wx_redirect', function(req, res, next) {
  var userInfo = {};
  var sessionKey = uuid.v4();

  req.session.sessionKey = sessionKey;
  if (req.query.code !== undefined) {
    console.log(req.query.code);
    wxUtli.getUserAccessToken(req.query.code, function(err, wxInfo) {
      if (!err) {
        userInfo.openID = wxInfo.openID;
        userInfo.nickName = wxInfo.nickName;
        userInfo.headImagUrl = wxInfo.headImagUrl;
        userSession[sessionKey] = userInfo;
        res.redirect("/point");
      } else {
        res.redirect(loginUrl);
      }
    });
  } else {
    res.send("这个是一个美食交流的网站");
  }
});

router.get('/point', function(req, res, next) {
  var userInfo = validateSession(req, res);
  if (!userInfo) {
    return;
  }
  // 如果没绑定， 展示提示用户绑定手机号的页面
  dbUser.getUserInfoByOpenID(userInfo.openID, function(err, cbUserInfo) {
    // 如果是空 用户第一次用微信登录 记录这个openid
    if (cbUserInfo.length == 0) {
      dbUser.addWXUser(userInfo.openID, function(err, msg) {
        if (err) {
          console.log("error: " + msg);
        } else {
          res.render('index.html', {userInfo: userInfo});
        }
      });
    } else if (!(cbUserInfo[0].uid)){
      // 登陆过 但是还是没有绑定手机号的
      res.render('index.html', { userInfo:userInfo});
    } else {
      // 展示用户积分信息
      var baseInfo = cbUserInfo[0];
      for (key in baseInfo) {
        userInfo[key] = baseInfo[key];
      }
      userInfo.allPhone = [{"phone" : baseInfo.phone}];
      console.log(userInfo);
      res.render('index.html', {userInfo: userInfo });
    }
  })
});



/*
   router.get('/', function(req, res, next) {
   console.log("session_key:" + req.session.session_key);
   res.render('index.html', { wxInfo: wxInfo, userInfo: userInfo });
   });
   */
router.get('/addPhone', function(req, res, next) {
  console.log("add_phone");
  var userInfo = validateSession(req, res);
  if (!userInfo) {
    return;
  }
  console.log(userInfo);
  res.render("add_phone.html", {});
});
router.get('/pointFAQ', function(req, res, next) {
  var userInfo = validateSession(req, res);
  if (!userInfo) {
    return;
  }
  res.render("point_faq.html", {});
});


router.get('/getVerifyCode', function(req, res, next) {
  userInfo = validateSession(req, res);
  if (!userInfo) {
    return;
  }
  var ret = {};
  var phone = req.query.phone;
  var codeInfo = generateSmsCodeInfo(phone);
  console.log("getVerifyCode for phone: " + phone + " code: " + JSON.stringify(codeInfo));
  if (codeInfo.err) {
    ret.err = codeInfo.err;
    ret.errMsg = codeInfo.errMsg;
    res.send(JSON.stringify(ret));
  } else {
    sms.codeNotice(phone, codeInfo.codeMsg, function(err) {
      console.log(err);
      verifyCodeMap[phone] = codeInfo;
      ret.err = false;
      res.send(JSON.stringify(ret));
    })
  }
})

router.get("/verifyPhone", function(req, res) {
  var phone = req.query.phone;
  var code = req.query.code;
  var userInfo = validateSession(req, res);
  if (!userInfo) {
    return ;
  }
  var bindRet = {};
  if (verifySmsCode(phone, code)) {
    // 验证码通过  将手机号绑定到userInfo.openID
    dbUser.bindUser(userInfo, phone, function(err) {
      if (err) {
        bindRet["err"] = true;
        bindRet["errMsg"] = JSON.stringify(err);
      } else {
        bindRet["err"] = false;
      }
      res.send(bindRet);
    });
  } else {
    bindRet.err = true;
    bindRet.errMsg = "验证码错误或者已经失效"
    res.send(bindRet);
  }
})
/*
   router.get('/wx_auth', function(req, res, next) {
   console.log(req.query.echostr);
   res.send(req.query.echostr);
   });

   {{#if_eq userInfo.userInfoValid 0 }}
   <p class="weui_media_desc">订餐电话: <a>添加电话</a> </p>
   {{/if_eq}}
   {{#if_eq userInfo.userInfoValid 1 }}
   <p class="weui_media_desc">订餐电话: {{userInfo.phone}}</a> </p>
   {{/if_eq}}



   {{#userInfo}}
   {{#bindPhone}}
   <p class="weui_media_desc">订餐电话: <a href='#/bindPhone'>绑定电话</a></p>
   {{/bindPhone}}
   {{#userInfoValid}}
   <p class="weui_media_desc">订餐电话: {{phone}}></p>
   {{/userInfoValid}}
   {{/userInfo}}
   */


module.exports = router;
