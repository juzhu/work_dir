var dbMysql = require('./mysql_pool.js');
var dbPool = dbMysql.pool;
var dbQuery = dbMysql.mysql_query;
var config = require('./config.js');

var userDB = new Object({
  // 根据用户openid获取用户的基本信息 积分 积分余额会员等级 账户余额之类的信息
  "getUserInfoByOpenID" : function(openID, cb) {
    console.log("getUserInfoByOpenID start");

    var sql = "select * from " + config.wx_bind_table + " as wx left join " + config.user_point_tb + " as p on p.uid=wx.uid left join " + config.user_info_tb + " as u on u.uid=p.uid";
    sql += " where openID='" + openID + "'";
    console.log(sql);
    dbQuery(sql, function(err, results) {
      if (err) {
        cb(true, err);
        console.log("mysql error " + err);
      } else if (results.affectedRows == 0) {
        cb(false, []);
      } else {
        cb(false, results);
      }
    });
  },
  "getUserPointHistoryByPhone": function(phone, cb) {
	console.log("getUserPointHistoryByPhone start");

    var sql = "select * from " + config.user_point_history_tb + " as h left join " + config.order_info_tb + " as i on h.order_id=i.order_id where phone='" + phone + "' order by h.order_time desc";
    console.log(sql);
    dbQuery(sql, function(err, results) {
      if (err) {
        cb(true, err);
        console.log("mysql error " + err);
      } else if (results.affectedRows == 0) {
        cb(false, []);
      } else {
        cb(false, results);
      }
    });
  },
  "addWXUser":function(openID, cb) {
    var sql = "insert ignore into " + config.wx_bind_table + " set openID='" + openID + "'";
    dbPool.acquire(function (err, client) {
      if (!err) {
        client.query(sql, function(err, results) {
          if (err) {
            cb(true, err);
          } else {
            cb(false);
          }
          dbPool.release(client);
        });
      } else {
        cb(true);
        dbPool.release(client);
      }
    });
  },
  "updateUserPointInfo" : function(userInfo, cb) {
    sql = "update " + config.user_point_tb + " set point=" + userInfo.point + " where uid=" + userInfo.uid;
    console.log(sql)
    dbQuery(sql, cb);
  },
  "bindUser" : function(userInfo, phone, cb) {
    if (userInfo.uid != null || userInfo.uid == 0) {
      // 暂时只支持 一对一的绑定
      console.log("账户已经绑定了，暂时只支持电话和微信一一绑定");
      cb("账户已经绑定了，暂时只支持电话和微信一一绑定");
      return;
    }
    // 查询phone对应的uid
    var sql = "select uid from " + config.user_info_tb + " where phone like '%" + phone + "%'";
    console.log(sql)
    dbQuery(sql, function(err, results) {
      if (!err && (results.length == 1)) {
        // 没点过的 不能绑定
        uid = results[0].uid;
        sql = "update " + config.wx_bind_table + " set uid=" + uid + " where openID='" + userInfo.openID + "'";
        console.log(sql)
        dbQuery(sql, cb);
      } else if (err) {
        cb(err);
      } else {
        cb("该电话还没点餐， 不能绑定")
      }
    })
  },
});
exports.userDB = userDB;
